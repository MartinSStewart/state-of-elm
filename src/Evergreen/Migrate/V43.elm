module Evergreen.Migrate.V43 exposing (..)

{-| This migration file was automatically generated by the lamdera compiler.

It includes:

  - A migration for each of the 6 Lamdera core types that has changed
  - A function named `migrate_ModuleName_TypeName` for each changed/custom type

Expect to see:

  - `Unimplement–µd` values as placeholders wherever I was unable to figure out a clear migration path for you
  - `@NOTICE` comments for things you should know about, i.e. new custom type constructors that won't get any
    value mappings from the old type by default

You can edit this file however you wish! It won't be generated again.

See <https://dashboard.lamdera.app/docs/evergreen> for more info.

-}

import AssocList
import AssocSet
import Countries exposing (Country)
import Evergreen.V38.AdminPage
import Evergreen.V38.AnswerMap
import Evergreen.V38.EmailAddress
import Evergreen.V38.Form
import Evergreen.V38.FreeTextAnswerMap
import Evergreen.V38.Questions
import Evergreen.V38.SendGrid
import Evergreen.V38.SurveyResults
import Evergreen.V38.Types
import Evergreen.V38.Ui
import Evergreen.V43.AdminPage
import Evergreen.V43.AnswerMap
import Evergreen.V43.EmailAddress
import Evergreen.V43.Form2022
import Evergreen.V43.Form2023
import Evergreen.V43.FreeTextAnswerMap
import Evergreen.V43.Questions2022
import Evergreen.V43.Questions2023 exposing (Age(..), ApplicationDomains(..), BuildTools(..), DoYouUseElm(..), DoYouUseElmAtWork(..), DoYouUseElmFormat(..), DoYouUseElmReview(..), Editors(..), ElmResources(..), ElmVersion(..), ExperienceLevel(..), Frameworks(..), HowLargeIsTheCompany(..), HowLong(..), NewsAndDiscussions(..), OtherLanguages(..), PleaseSelectYourGender(..), StylingTools(..), TestTools(..), WhatLanguageDoYouUseForBackend(..))
import Evergreen.V43.SendGrid
import Evergreen.V43.SurveyResults2022
import Evergreen.V43.Types
import Evergreen.V43.Ui
import Lamdera.Migrations exposing (..)
import List
import List.Nonempty exposing (Nonempty)
import Maybe


frontendModel : Evergreen.V38.Types.FrontendModel -> ModelMigration Evergreen.V43.Types.FrontendModel Evergreen.V43.Types.FrontendMsg
frontendModel old =
    ModelUnchanged


backendModel : Evergreen.V38.Types.BackendModel -> ModelMigration Evergreen.V43.Types.BackendModel Evergreen.V43.Types.BackendMsg
backendModel old =
    ModelMigrated ( migrate_Types_BackendModel old, Cmd.none )


frontendMsg : Evergreen.V38.Types.FrontendMsg -> MsgMigration Evergreen.V43.Types.FrontendMsg Evergreen.V43.Types.FrontendMsg
frontendMsg old =
    MsgOldValueIgnored


toBackend : Evergreen.V38.Types.ToBackend -> MsgMigration Evergreen.V43.Types.ToBackend Evergreen.V43.Types.BackendMsg
toBackend old =
    MsgOldValueIgnored


backendMsg : Evergreen.V38.Types.BackendMsg -> MsgMigration Evergreen.V43.Types.BackendMsg Evergreen.V43.Types.BackendMsg
backendMsg old =
    MsgOldValueIgnored


toFrontend : Evergreen.V38.Types.ToFrontend -> MsgMigration Evergreen.V43.Types.ToFrontend Evergreen.V43.Types.FrontendMsg
toFrontend old =
    MsgOldValueIgnored


migrate_Types_BackendModel : Evergreen.V38.Types.BackendModel -> Evergreen.V43.Types.BackendModel
migrate_Types_BackendModel old =
    let
        forms : Evergreen.V43.Types.BackendSurvey2022
        forms =
            { forms =
                AssocList.map
                    (\_ a ->
                        { form = migrate_form_form2022 a.form
                        , submitTime = a.submitTime
                        }
                    )
                    old.forms
            , formMapping = migrate_FormMapping_FormMapping2022 old.formMapping
            , sendEmailsStatus = migrate_AdminPage_SendEmailsStatus old.sendEmailsStatus
            , cachedSurveyResults = Nothing --Maybe.map migrate_SurveyResults_Data old.cachedSurveyResults
            }
    in
    { adminLogin = old.adminLogin
    , survey2022 = forms
    , survey2023 = initSurvey2023
    , subscribedEmails = Debug.todo ""
    , secretCounter = 123123
    }



--
--migrate_SurveyResults_Data : Evergreen.V38.SurveyResults.Data -> Evergreen.V43.SurveyResults2022.Data
--migrate_SurveyResults_Data old =
--    { totalParticipants = old.totalParticipants
--    , doYouUseElm = old.doYouUseElm --Evergreen.V43.DataEntry.DataEntry Evergreen.V43.Questions2022.DoYouUseElm
--    , age = old.age --DataEntrySegments Evergreen.V43.Questions2022.Age
--    , functionalProgrammingExperience = old.functionalProgrammingExperience --DataEntrySegments Evergreen.V43.Questions2022.ExperienceLevel
--    , otherLanguages = old.otherLanguages --DataEntryWithOtherSegments Evergreen.V43.Questions2022.OtherLanguages
--    , newsAndDiscussions = old.newsAndDiscussions --DataEntryWithOtherSegments Evergreen.V43.Questions2022.NewsAndDiscussions
--    , elmInitialInterest = old.elmInitialInterest --DataEntryWithOtherSegments ()
--    , countryLivingIn = old.countryLivingIn --DataEntrySegments Countries.Country
--    , elmResources = old.elmResources --Evergreen.V43.DataEntry.DataEntryWithOther Evergreen.V43.Questions2022.ElmResources
--    , doYouUseElmAtWork = old.doYouUseElmAtWork --Evergreen.V43.DataEntry.DataEntry Evergreen.V43.Questions2022.DoYouUseElmAtWork
--    , applicationDomains = old.applicationDomains --Evergreen.V43.DataEntry.DataEntryWithOther Evergreen.V43.Questions2022.ApplicationDomains
--    , howLargeIsTheCompany = old.howLargeIsTheCompany --Evergreen.V43.DataEntry.DataEntry Evergreen.V43.Questions2022.HowLargeIsTheCompany
--    , whatLanguageDoYouUseForBackend = old.whatLanguageDoYouUseForBackend --Evergreen.V43.DataEntry.DataEntryWithOther Evergreen.V43.Questions2022.WhatLanguageDoYouUseForBackend
--    , howLong = old.howLong --Evergreen.V43.DataEntry.DataEntry Evergreen.V43.Questions2022.HowLong
--    , elmVersion = old.elmVersion --Evergreen.V43.DataEntry.DataEntryWithOther Evergreen.V43.Questions2022.ElmVersion
--    , doYouUseElmFormat = old.doYouUseElmFormat --Evergreen.V43.DataEntry.DataEntry Evergreen.V43.Questions2022.DoYouUseElmFormat
--    , stylingTools = old.stylingTools --Evergreen.V43.DataEntry.DataEntryWithOther Evergreen.V43.Questions2022.StylingTools
--    , buildTools = old.buildTools --Evergreen.V43.DataEntry.DataEntryWithOther Evergreen.V43.Questions2022.BuildTools
--    , frameworks = old.frameworks --Evergreen.V43.DataEntry.DataEntryWithOther Evergreen.V43.Questions2022.Frameworks
--    , editors = old.editors --Evergreen.V43.DataEntry.DataEntryWithOther Evergreen.V43.Questions2022.Editors
--    , doYouUseElmReview = old.doYouUseElmReview --Evergreen.V43.DataEntry.DataEntry Evergreen.V43.Questions2022.DoYouUseElmReview
--    , whichElmReviewRulesDoYouUse = old.whichElmReviewRulesDoYouUse --Evergreen.V43.DataEntry.DataEntryWithOther Evergreen.V43.Questions2022.WhichElmReviewRulesDoYouUse
--    , testTools = old.testTools --Evergreen.V43.DataEntry.DataEntryWithOther Evergreen.V43.Questions2022.TestTools
--    , testsWrittenFor = old.testsWrittenFor --Evergreen.V43.DataEntry.DataEntryWithOther Evergreen.V43.Questions2022.TestsWrittenFor
--    , biggestPainPoint = old.biggestPainPoint --Evergreen.V43.DataEntry.DataEntryWithOther ()
--    , whatDoYouLikeMost = old.whatDoYouLikeMost --Evergreen.V43.DataEntry.DataEntryWithOther ()
--    }
--


migrate_FormMapping_FormMapping2022 : Evergreen.V38.Form.FormMapping -> Evergreen.V43.Form2022.FormMapping
migrate_FormMapping_FormMapping2022 old =
    { doYouUseElm = old.doYouUseElm
    , age = old.age
    , functionalProgrammingExperience = old.functionalProgrammingExperience
    , otherLanguages = migrate_AnswerMap_AnswerMap migrate_Questions2023_OtherLanguages old.otherLanguages
    , newsAndDiscussions = migrate_AnswerMap_AnswerMap migrate_Questions2023_NewsAndDiscussions old.newsAndDiscussions --Evergreen.V43.AnswerMap.AnswerMap Evergreen.V43.Questions2022.NewsAndDiscussions
    , elmResources = migrate_AnswerMap_AnswerMap migrate_Questions2023_ElmResources old.elmResources --Evergreen.V43.AnswerMap.AnswerMap Evergreen.V43.Questions2022.ElmResources
    , countryLivingIn = old.countryLivingIn
    , applicationDomains = migrate_AnswerMap_AnswerMap migrate_Questions2023_ApplicationDomains old.applicationDomains --Evergreen.V43.AnswerMap.AnswerMap Evergreen.V43.Questions2022.ApplicationDomains
    , doYouUseElmAtWork = old.doYouUseElmAtWork
    , howLargeIsTheCompany = old.howLargeIsTheCompany
    , whatLanguageDoYouUseForBackend = migrate_AnswerMap_AnswerMap migrate_Questions2023_WhatLanguageDoYouUseForBackend old.whatLanguageDoYouUseForBackend --Evergreen.V43.AnswerMap.AnswerMap Evergreen.V43.Questions2022.WhatLanguageDoYouUseForBackend
    , howLong = old.howLong
    , elmVersion = migrate_AnswerMap_AnswerMap migrate_Questions2023_ElmVersion old.elmVersion --Evergreen.V43.AnswerMap.AnswerMap Evergreen.V43.Questions2022.ElmVersion
    , doYouUseElmFormat = old.doYouUseElmFormat
    , stylingTools = migrate_AnswerMap_AnswerMap migrate_Questions2023_StylingTools old.stylingTools --Evergreen.V43.AnswerMap.AnswerMap Evergreen.V43.Questions2022.StylingTools
    , buildTools = migrate_AnswerMap_AnswerMap migrate_Questions2023_BuildTools old.buildTools --Evergreen.V43.AnswerMap.AnswerMap Evergreen.V43.Questions2022.BuildTools
    , frameworks = migrate_AnswerMap_AnswerMap migrate_Questions2023_Frameworks old.frameworks --Evergreen.V43.AnswerMap.AnswerMap Evergreen.V43.Questions2022.Frameworks
    , editors = migrate_AnswerMap_AnswerMap migrate_Questions2023_Editors old.editors --Evergreen.V43.AnswerMap.AnswerMap Evergreen.V43.Questions2022.Editors
    , doYouUseElmReview = old.doYouUseElmReview
    , whichElmReviewRulesDoYouUse = migrate_AnswerMap_AnswerMap migrate_Questions2023_WhichElmReviewRulesDoYouUse old.whichElmReviewRulesDoYouUse --Evergreen.V43.AnswerMap.AnswerMap Evergreen.V43.Questions2022.WhichElmReviewRulesDoYouUse
    , testTools = migrate_AnswerMap_AnswerMap migrate_Questions2023_TestTools old.testTools --Evergreen.V43.AnswerMap.AnswerMap Evergreen.V43.Questions2022.TestTools
    , testsWrittenFor = migrate_AnswerMap_AnswerMap migrate_Questions2023_TestsWrittenFor old.testsWrittenFor --Evergreen.V43.AnswerMap.AnswerMap Evergreen.V43.Questions2022.TestsWrittenFor
    , elmInitialInterest = migrate_FreeTextAnswerMap_FreeTextAnswerMap old.elmInitialInterest
    , biggestPainPoint = migrate_FreeTextAnswerMap_FreeTextAnswerMap old.biggestPainPoint
    , whatDoYouLikeMost = migrate_FreeTextAnswerMap_FreeTextAnswerMap old.whatDoYouLikeMost
    }


migrate_form_form2022 : Evergreen.V38.Form.Form -> Evergreen.V43.Form2022.Form2022
migrate_form_form2022 form =
    { doYouUseElm = AssocSet.map migrate_Questions2023_DoYouUseElm form.doYouUseElm
    , age = Maybe.map migrate_Questions2023_Age form.age
    , functionalProgrammingExperience = Maybe.map migrate_Questions2023_ExperienceLevel form.functionalProgrammingExperience
    , otherLanguages = migrate_Ui_MultiChoiceWithOther migrate_Questions2023_OtherLanguages form.otherLanguages
    , newsAndDiscussions = migrate_Ui_MultiChoiceWithOther migrate_Questions2023_NewsAndDiscussions form.newsAndDiscussions
    , elmResources = migrate_Ui_MultiChoiceWithOther migrate_Questions2023_ElmResources form.elmResources
    , countryLivingIn = form.countryLivingIn
    , applicationDomains = migrate_Ui_MultiChoiceWithOther migrate_Questions2023_ApplicationDomains form.applicationDomains
    , doYouUseElmAtWork = Maybe.map migrate_Questions2023_DoYouUseElmAtWork form.doYouUseElmAtWork
    , howLargeIsTheCompany = Maybe.map migrate_Questions2023_HowLargeIsTheCompany form.howLargeIsTheCompany
    , whatLanguageDoYouUseForBackend = migrate_Ui_MultiChoiceWithOther migrate_Questions2023_WhatLanguageDoYouUseForBackend form.whatLanguageDoYouUseForBackend
    , howLong = Maybe.map migrate_Questions2023_HowLong form.howLong
    , elmVersion = migrate_Ui_MultiChoiceWithOther migrate_Questions2023_ElmVersion form.elmVersion
    , doYouUseElmFormat = Maybe.map migrate_Questions2023_DoYouUseElmFormat form.doYouUseElmFormat
    , stylingTools = migrate_Ui_MultiChoiceWithOther migrate_Questions2023_StylingTools form.stylingTools
    , buildTools = migrate_Ui_MultiChoiceWithOther migrate_Questions2023_BuildTools form.buildTools
    , frameworks = migrate_Ui_MultiChoiceWithOther migrate_Questions2023_Frameworks form.frameworks
    , editors = migrate_Ui_MultiChoiceWithOther migrate_Questions2023_Editors form.editors
    , doYouUseElmReview = Maybe.map migrate_Questions2023_DoYouUseElmReview form.doYouUseElmReview
    , whichElmReviewRulesDoYouUse = migrate_Ui_MultiChoiceWithOther migrate_Questions2023_WhichElmReviewRulesDoYouUse form.whichElmReviewRulesDoYouUse
    , testTools = migrate_Ui_MultiChoiceWithOther migrate_Questions2023_TestTools form.testTools
    , testsWrittenFor = migrate_Ui_MultiChoiceWithOther migrate_Questions2023_TestsWrittenFor form.testsWrittenFor
    , elmInitialInterest = form.elmInitialInterest --String
    , biggestPainPoint = form.biggestPainPoint --String
    , whatDoYouLikeMost = form.whatDoYouLikeMost --String
    , emailAddress = form.emailAddress --String
    }


migrate_Questions2023_TestsWrittenFor : Evergreen.V38.Questions.TestsWrittenFor -> Evergreen.V43.Questions2022.TestsWrittenFor
migrate_Questions2023_TestsWrittenFor a =
    case a of
        Evergreen.V38.Questions.ComplicatedFunctions ->
            Evergreen.V43.Questions2022.ComplicatedFunctions

        Evergreen.V38.Questions.FunctionsThatReturnCmds ->
            Evergreen.V43.Questions2022.FunctionsThatReturnCmds

        Evergreen.V38.Questions.AllPublicFunctions ->
            Evergreen.V43.Questions2022.AllPublicFunctions

        Evergreen.V38.Questions.HtmlFunctions ->
            Evergreen.V43.Questions2022.HtmlFunctions

        Evergreen.V38.Questions.JsonDecodersAndEncoders ->
            Evergreen.V43.Questions2022.JsonDecodersAndEncoders

        Evergreen.V38.Questions.MostPublicFunctions ->
            Evergreen.V43.Questions2022.MostPublicFunctions


migrate_Questions2023_WhichElmReviewRulesDoYouUse : Evergreen.V38.Questions.WhichElmReviewRulesDoYouUse -> Evergreen.V43.Questions2022.WhichElmReviewRulesDoYouUse
migrate_Questions2023_WhichElmReviewRulesDoYouUse a =
    case a of
        Evergreen.V38.Questions.ElmReviewUnused ->
            Evergreen.V43.Questions2022.ElmReviewUnused

        Evergreen.V38.Questions.ElmReviewSimplify ->
            Evergreen.V43.Questions2022.ElmReviewSimplify

        Evergreen.V38.Questions.ElmReviewLicense ->
            Evergreen.V43.Questions2022.ElmReviewLicense

        Evergreen.V38.Questions.ElmReviewDebug ->
            Evergreen.V43.Questions2022.ElmReviewDebug

        Evergreen.V38.Questions.ElmReviewCommon ->
            Evergreen.V43.Questions2022.ElmReviewCommon

        Evergreen.V38.Questions.ElmReviewCognitiveComplexity ->
            Evergreen.V43.Questions2022.ElmReviewCognitiveComplexity



--AssocList.Dict
--            Effect.Lamdera.SessionId
--            { form : Evergreen.V38.Form.Form
--            , submitTime : Maybe Effect.Time.Posix
--            }
--AssocList.Dict
--            Effect.Lamdera.SessionId
--            { form : Evergreen.V43.Form2022.Form2022
--            , submitTime : Maybe Effect.Time.Posix
--            }


initSurvey2023 : Evergreen.V43.Types.BackendSurvey2023
initSurvey2023 =
    let
        answerMap : Evergreen.V43.Form2023.FormMapping
        answerMap =
            { doYouUseElm = ""
            , age = ""
            , pleaseSelectYourGender = ""
            , functionalProgrammingExperience = ""
            , otherLanguages = answerMapInit otherLanguages
            , newsAndDiscussions = answerMapInit newsAndDiscussions
            , elmResources = answerMapInit elmResources
            , elmInitialInterest = freeTextAnswerMapInit
            , countryLivingIn = ""
            , applicationDomains = answerMapInit applicationDomains
            , doYouUseElmAtWork = ""
            , whatPreventsYouFromUsingElmAtWork = freeTextAnswerMapInit
            , howDidItGoUsingElmAtWork = freeTextAnswerMapInit
            , howLargeIsTheCompany = ""
            , whatLanguageDoYouUseForBackend = answerMapInit Questions2023.whatLanguageDoYouUseForBackend
            , howLong = ""
            , elmVersion = answerMapInit elmVersion
            , doYouUseElmFormat = ""
            , stylingTools = answerMapInit stylingTools
            , buildTools = answerMapInit buildTools
            , frameworks = answerMapInit frameworks
            , editors = answerMapInit editors
            , doYouUseElmReview = ""
            , testTools = answerMapInit testTools
            , biggestPainPoint = freeTextAnswerMapInit
            , whatDoYouLikeMost = freeTextAnswerMapInit
            , whatPackagesDoYouUse = ""
            }
    in
    { forms = AssocList.empty
    , formMapping = answerMap
    , sendEmailsStatus = Evergreen.V43.AdminPage.EmailsNotSent
    , cachedSurveyResults = Nothing
    }


freeTextAnswerMapInit =
    Evergreen.V43.FreeTextAnswerMap.FreeTextAnswerMap { otherMapping = [], comment = "" }


answerMapInit : { a | choices : List.Nonempty.Nonempty b, choiceToString : b -> String } -> Evergreen.V43.AnswerMap.AnswerMap c
answerMapInit question =
    { otherMapping = []
    , existingMapping =
        (List.Nonempty.length question.choices - 1)
            |> List.range 0
            |> List.map
                (\index ->
                    List.Nonempty.get index question.choices
                        |> question.choiceToString
                        |> otherAnswer
                        |> List.singleton
                        |> AssocSet.fromList
                )
    , comment = ""
    }
        |> Evergreen.V43.AnswerMap.AnswerMap


otherAnswer =
    normalizeOtherAnswer >> Evergreen.V43.AnswerMap.OtherAnswer


normalizeOtherAnswer =
    String.trim >> String.toLower


migrate_AdminPage_SendEmailsStatus : Evergreen.V38.AdminPage.SendEmailsStatus -> Evergreen.V43.AdminPage.SendEmailsStatus
migrate_AdminPage_SendEmailsStatus old =
    case old of
        Evergreen.V38.AdminPage.EmailsNotSent ->
            Evergreen.V43.AdminPage.EmailsNotSent

        Evergreen.V38.AdminPage.Sending ->
            Evergreen.V43.AdminPage.Sending

        Evergreen.V38.AdminPage.SendResult p0 ->
            Evergreen.V43.AdminPage.SendResult
                (p0
                    |> List.map
                        (\rec1 ->
                            { emailAddress = rec1.emailAddress |> migrate_EmailAddress_EmailAddress
                            , result = rec1.result |> Result.mapError migrate_SendGrid_Error
                            }
                        )
                )


migrate_AnswerMap_AnswerMap : (a_old -> a_new) -> Evergreen.V38.AnswerMap.AnswerMap a_old -> Evergreen.V43.AnswerMap.AnswerMap a_new
migrate_AnswerMap_AnswerMap migrate_a old =
    case old of
        Evergreen.V38.AnswerMap.AnswerMap p0 ->
            Evergreen.V43.AnswerMap.AnswerMap
                { otherMapping =
                    p0.otherMapping
                        |> List.map
                            (\rec1 ->
                                { groupName = rec1.groupName
                                , otherAnswers = rec1.otherAnswers |> migrate_AssocSet_Set migrate_AnswerMap_OtherAnswer
                                }
                            )
                , existingMapping = p0.existingMapping |> List.map (migrate_AssocSet_Set migrate_AnswerMap_OtherAnswer)
                , comment = p0.comment
                }


migrate_AnswerMap_Hotkey : Evergreen.V38.AnswerMap.Hotkey -> Evergreen.V43.AnswerMap.Hotkey
migrate_AnswerMap_Hotkey old =
    case old of
        Evergreen.V38.AnswerMap.Hotkey p0 ->
            Evergreen.V43.AnswerMap.Hotkey p0


migrate_AnswerMap_OtherAnswer : Evergreen.V38.AnswerMap.OtherAnswer -> Evergreen.V43.AnswerMap.OtherAnswer
migrate_AnswerMap_OtherAnswer old =
    case old of
        Evergreen.V38.AnswerMap.OtherAnswer p0 ->
            Evergreen.V43.AnswerMap.OtherAnswer p0


migrate_AssocSet_Set : (a_old -> a_new) -> AssocSet.Set a_old -> AssocSet.Set a_new
migrate_AssocSet_Set migrate_a old =
    old |> AssocSet.map migrate_a


migrate_EmailAddress_EmailAddress : Evergreen.V38.EmailAddress.EmailAddress -> Evergreen.V43.EmailAddress.EmailAddress
migrate_EmailAddress_EmailAddress old =
    case old of
        Evergreen.V38.EmailAddress.EmailAddress p0 ->
            Evergreen.V43.EmailAddress.EmailAddress p0


migrate_FreeTextAnswerMap_FreeTextAnswerMap : Evergreen.V38.FreeTextAnswerMap.FreeTextAnswerMap -> Evergreen.V43.FreeTextAnswerMap.FreeTextAnswerMap
migrate_FreeTextAnswerMap_FreeTextAnswerMap old =
    case old of
        Evergreen.V38.FreeTextAnswerMap.FreeTextAnswerMap p0 ->
            Evergreen.V43.FreeTextAnswerMap.FreeTextAnswerMap p0


migrate_Questions2023_Age : Evergreen.V38.Questions.Age -> Evergreen.V43.Questions2022.Age
migrate_Questions2023_Age old =
    case old of
        Evergreen.V38.Questions.Under10 ->
            Evergreen.V43.Questions2022.Under10

        Evergreen.V38.Questions.Age10To19 ->
            Evergreen.V43.Questions2022.Age10To19

        Evergreen.V38.Questions.Age20To29 ->
            Evergreen.V43.Questions2022.Age20To29

        Evergreen.V38.Questions.Age30To39 ->
            Evergreen.V43.Questions2022.Age30To39

        Evergreen.V38.Questions.Age40To49 ->
            Evergreen.V43.Questions2022.Age40To49

        Evergreen.V38.Questions.Age50To59 ->
            Evergreen.V43.Questions2022.Age50To59

        Evergreen.V38.Questions.Over60 ->
            Evergreen.V43.Questions2022.Over60


migrate_Questions2023_ApplicationDomains : Evergreen.V38.Questions.ApplicationDomains -> Evergreen.V43.Questions2022.ApplicationDomains
migrate_Questions2023_ApplicationDomains old =
    case old of
        Evergreen.V38.Questions.Education ->
            Evergreen.V43.Questions2022.Education

        Evergreen.V38.Questions.Gaming ->
            Evergreen.V43.Questions2022.Gaming

        Evergreen.V38.Questions.ECommerce ->
            Evergreen.V43.Questions2022.ECommerce

        Evergreen.V38.Questions.Music ->
            Evergreen.V43.Questions2022.Music

        Evergreen.V38.Questions.Finance ->
            Evergreen.V43.Questions2022.Finance

        Evergreen.V38.Questions.Health ->
            Evergreen.V43.Questions2022.Health

        Evergreen.V38.Questions.Productivity ->
            Evergreen.V43.Questions2022.Productivity

        Evergreen.V38.Questions.Communication ->
            Evergreen.V43.Questions2022.Communication

        Evergreen.V38.Questions.DataVisualization ->
            Evergreen.V43.Questions2022.DataVisualization

        Evergreen.V38.Questions.Transportation ->
            Evergreen.V43.Questions2022.Transportation


migrate_Questions2023_BuildTools : Evergreen.V38.Questions.BuildTools -> Evergreen.V43.Questions2022.BuildTools
migrate_Questions2023_BuildTools old =
    case old of
        Evergreen.V38.Questions.ShellScripts ->
            Evergreen.V43.Questions2022.ShellScripts

        Evergreen.V38.Questions.ElmLive ->
            Evergreen.V43.Questions2022.ElmLive

        Evergreen.V38.Questions.CreateElmApp ->
            Evergreen.V43.Questions2022.CreateElmApp

        Evergreen.V38.Questions.Webpack ->
            Evergreen.V43.Questions2022.Webpack

        Evergreen.V38.Questions.Brunch ->
            Evergreen.V43.Questions2022.Brunch

        Evergreen.V38.Questions.ElmMakeStandalone ->
            Evergreen.V43.Questions2022.ElmMakeStandalone

        Evergreen.V38.Questions.Gulp ->
            Evergreen.V43.Questions2022.Gulp

        Evergreen.V38.Questions.Make ->
            Evergreen.V43.Questions2022.Make

        Evergreen.V38.Questions.ElmReactor ->
            Evergreen.V43.Questions2022.ElmReactor

        Evergreen.V38.Questions.Parcel ->
            Evergreen.V43.Questions2022.Parcel

        Evergreen.V38.Questions.Vite ->
            Evergreen.V43.Questions2022.Vite


migrate_Questions2023_DoYouUseElm : Evergreen.V38.Questions.DoYouUseElm -> Evergreen.V43.Questions2022.DoYouUseElm
migrate_Questions2023_DoYouUseElm old =
    case old of
        Evergreen.V38.Questions.YesAtWork ->
            Evergreen.V43.Questions2022.YesAtWork

        Evergreen.V38.Questions.YesInSideProjects ->
            Evergreen.V43.Questions2022.YesInSideProjects

        Evergreen.V38.Questions.YesAsAStudent ->
            Evergreen.V43.Questions2022.YesAsAStudent

        Evergreen.V38.Questions.IUsedToButIDontAnymore ->
            Evergreen.V43.Questions2022.IUsedToButIDontAnymore

        Evergreen.V38.Questions.NoButImCuriousAboutIt ->
            Evergreen.V43.Questions2022.NoButImCuriousAboutIt

        Evergreen.V38.Questions.NoAndIDontPlanTo ->
            Evergreen.V43.Questions2022.NoAndIDontPlanTo


migrate_Questions2023_DoYouUseElmAtWork : Evergreen.V38.Questions.DoYouUseElmAtWork -> Evergreen.V43.Questions2022.DoYouUseElmAtWork
migrate_Questions2023_DoYouUseElmAtWork old =
    case old of
        Evergreen.V38.Questions.NotInterestedInElmAtWork ->
            Evergreen.V43.Questions2022.NotInterestedInElmAtWork

        Evergreen.V38.Questions.WouldLikeToUseElmAtWork ->
            Evergreen.V43.Questions2022.WouldLikeToUseElmAtWork

        Evergreen.V38.Questions.HaveTriedElmInAWorkProject ->
            Evergreen.V43.Questions2022.HaveTriedElmInAWorkProject

        Evergreen.V38.Questions.MyTeamMostlyWritesNewCodeInElm ->
            Evergreen.V43.Questions2022.MyTeamMostlyWritesNewCodeInElm

        Evergreen.V38.Questions.NotEmployed ->
            Evergreen.V43.Questions2022.NotEmployed


migrate_Questions2023_DoYouUseElmFormat : Evergreen.V38.Questions.DoYouUseElmFormat -> Evergreen.V43.Questions2022.DoYouUseElmFormat
migrate_Questions2023_DoYouUseElmFormat old =
    case old of
        Evergreen.V38.Questions.PreferElmFormat ->
            Evergreen.V43.Questions2022.PreferElmFormat

        Evergreen.V38.Questions.TriedButDontUseElmFormat ->
            Evergreen.V43.Questions2022.TriedButDontUseElmFormat

        Evergreen.V38.Questions.HeardButDontUseElmFormat ->
            Evergreen.V43.Questions2022.HeardButDontUseElmFormat

        Evergreen.V38.Questions.HaveNotHeardOfElmFormat ->
            Evergreen.V43.Questions2022.HaveNotHeardOfElmFormat


migrate_Questions2023_DoYouUseElmReview : Evergreen.V38.Questions.DoYouUseElmReview -> Evergreen.V43.Questions2022.DoYouUseElmReview
migrate_Questions2023_DoYouUseElmReview old =
    case old of
        Evergreen.V38.Questions.NeverHeardOfElmReview ->
            Evergreen.V43.Questions2022.NeverHeardOfElmReview

        Evergreen.V38.Questions.HeardOfItButNeverTriedElmReview ->
            Evergreen.V43.Questions2022.HeardOfItButNeverTriedElmReview

        Evergreen.V38.Questions.IveTriedElmReview ->
            Evergreen.V43.Questions2022.IveTriedElmReview

        Evergreen.V38.Questions.IUseElmReviewRegularly ->
            Evergreen.V43.Questions2022.IUseElmReviewRegularly


migrate_Questions2023_Editors : Evergreen.V38.Questions.Editors -> Evergreen.V43.Questions2022.Editors
migrate_Questions2023_Editors old =
    case old of
        Evergreen.V38.Questions.SublimeText ->
            Evergreen.V43.Questions2022.SublimeText

        Evergreen.V38.Questions.Vim ->
            Evergreen.V43.Questions2022.Vim

        Evergreen.V38.Questions.Atom ->
            Evergreen.V43.Questions2022.Atom

        Evergreen.V38.Questions.Emacs ->
            Evergreen.V43.Questions2022.Emacs

        Evergreen.V38.Questions.VSCode ->
            Evergreen.V43.Questions2022.VSCode

        Evergreen.V38.Questions.Intellij ->
            Evergreen.V43.Questions2022.Intellij


migrate_Questions2023_ElmResources : Evergreen.V38.Questions.ElmResources -> Evergreen.V43.Questions2022.ElmResources
migrate_Questions2023_ElmResources old =
    case old of
        Evergreen.V38.Questions.DailyDrip ->
            Evergreen.V43.Questions2022.DailyDrip

        Evergreen.V38.Questions.ElmInActionBook ->
            Evergreen.V43.Questions2022.ElmInActionBook

        Evergreen.V38.Questions.WeeklyBeginnersElmSubreddit ->
            Evergreen.V43.Questions2022.WeeklyBeginnersElmSubreddit

        Evergreen.V38.Questions.BeginningElmBook ->
            Evergreen.V43.Questions2022.BeginningElmBook

        Evergreen.V38.Questions.StackOverflow ->
            Evergreen.V43.Questions2022.StackOverflow

        Evergreen.V38.Questions.BuildingWebAppsWithElm ->
            Evergreen.V43.Questions2022.BuildingWebAppsWithElm

        Evergreen.V38.Questions.TheJsonSurvivalKit ->
            Evergreen.V43.Questions2022.TheJsonSurvivalKit

        Evergreen.V38.Questions.EggheadCourses ->
            Evergreen.V43.Questions2022.EggheadCourses

        Evergreen.V38.Questions.ProgrammingElmBook ->
            Evergreen.V43.Questions2022.ProgrammingElmBook

        Evergreen.V38.Questions.GuideElmLang ->
            Evergreen.V43.Questions2022.GuideElmLang

        Evergreen.V38.Questions.ElmForBeginners ->
            Evergreen.V43.Questions2022.ElmForBeginners

        Evergreen.V38.Questions.ElmSlack_ ->
            Evergreen.V43.Questions2022.ElmSlack_

        Evergreen.V38.Questions.FrontendMasters ->
            Evergreen.V43.Questions2022.FrontendMasters

        Evergreen.V38.Questions.ElmOnline ->
            Evergreen.V43.Questions2022.ElmOnline


migrate_Questions2023_ElmVersion : Evergreen.V38.Questions.ElmVersion -> Evergreen.V43.Questions2022.ElmVersion
migrate_Questions2023_ElmVersion old =
    case old of
        Evergreen.V38.Questions.Version0_19 ->
            Evergreen.V43.Questions2022.Version0_19

        Evergreen.V38.Questions.Version0_18 ->
            Evergreen.V43.Questions2022.Version0_18

        Evergreen.V38.Questions.Version0_17 ->
            Evergreen.V43.Questions2022.Version0_17

        Evergreen.V38.Questions.Version0_16 ->
            Evergreen.V43.Questions2022.Version0_16


migrate_Questions2023_ExperienceLevel : Evergreen.V38.Questions.ExperienceLevel -> Evergreen.V43.Questions2022.ExperienceLevel
migrate_Questions2023_ExperienceLevel old =
    case old of
        Evergreen.V38.Questions.Beginner ->
            Evergreen.V43.Questions2022.Beginner

        Evergreen.V38.Questions.Intermediate ->
            Evergreen.V43.Questions2022.Intermediate

        Evergreen.V38.Questions.Professional ->
            Evergreen.V43.Questions2022.Professional

        Evergreen.V38.Questions.Expert ->
            Evergreen.V43.Questions2022.Expert


migrate_Questions2023_Frameworks : Evergreen.V38.Questions.Frameworks -> Evergreen.V43.Questions2022.Frameworks
migrate_Questions2023_Frameworks old =
    case old of
        Evergreen.V38.Questions.Lamdera_ ->
            Evergreen.V43.Questions2022.Lamdera_

        Evergreen.V38.Questions.ElmSpa ->
            Evergreen.V43.Questions2022.ElmSpa

        Evergreen.V38.Questions.ElmPages ->
            Evergreen.V43.Questions2022.ElmPages

        Evergreen.V38.Questions.ElmPlayground ->
            Evergreen.V43.Questions2022.ElmPlayground


migrate_Questions2023_HowLargeIsTheCompany : Evergreen.V38.Questions.HowLargeIsTheCompany -> Evergreen.V43.Questions2022.HowLargeIsTheCompany
migrate_Questions2023_HowLargeIsTheCompany old =
    case old of
        Evergreen.V38.Questions.Size1To10Employees ->
            Evergreen.V43.Questions2022.Size1To10Employees

        Evergreen.V38.Questions.Size11To50Employees ->
            Evergreen.V43.Questions2022.Size11To50Employees

        Evergreen.V38.Questions.Size50To100Employees ->
            Evergreen.V43.Questions2022.Size50To100Employees

        Evergreen.V38.Questions.Size100OrMore ->
            Evergreen.V43.Questions2022.Size100OrMore


migrate_Questions2023_HowLong : Evergreen.V38.Questions.HowLong -> Evergreen.V43.Questions2022.HowLong
migrate_Questions2023_HowLong old =
    case old of
        Evergreen.V38.Questions.Under3Months ->
            Evergreen.V43.Questions2022.Under3Months

        Evergreen.V38.Questions.Between3MonthsAndAYear ->
            Evergreen.V43.Questions2022.Between3MonthsAndAYear

        Evergreen.V38.Questions.OneYear ->
            Evergreen.V43.Questions2022.OneYear

        Evergreen.V38.Questions.TwoYears ->
            Evergreen.V43.Questions2022.TwoYears

        Evergreen.V38.Questions.ThreeYears ->
            Evergreen.V43.Questions2022.ThreeYears

        Evergreen.V38.Questions.FourYears ->
            Evergreen.V43.Questions2022.FourYears

        Evergreen.V38.Questions.FiveYears ->
            Evergreen.V43.Questions2022.FiveYears

        Evergreen.V38.Questions.SixYears ->
            Evergreen.V43.Questions2022.SixYears

        Evergreen.V38.Questions.SevenYears ->
            Evergreen.V43.Questions2022.SevenYears

        Evergreen.V38.Questions.EightYears ->
            Evergreen.V43.Questions2022.EightYears

        Evergreen.V38.Questions.NineYears ->
            Evergreen.V43.Questions2022.NineYears


migrate_Questions2023_NewsAndDiscussions : Evergreen.V38.Questions.NewsAndDiscussions -> Evergreen.V43.Questions2022.NewsAndDiscussions
migrate_Questions2023_NewsAndDiscussions old =
    case old of
        Evergreen.V38.Questions.ElmDiscourse ->
            Evergreen.V43.Questions2022.ElmDiscourse

        Evergreen.V38.Questions.ElmSlack ->
            Evergreen.V43.Questions2022.ElmSlack

        Evergreen.V38.Questions.ElmSubreddit ->
            Evergreen.V43.Questions2022.ElmSubreddit

        Evergreen.V38.Questions.Twitter ->
            Evergreen.V43.Questions2022.Twitter

        Evergreen.V38.Questions.ElmRadio ->
            Evergreen.V43.Questions2022.ElmRadio

        Evergreen.V38.Questions.BlogPosts ->
            Evergreen.V43.Questions2022.BlogPosts

        Evergreen.V38.Questions.Facebook ->
            Evergreen.V43.Questions2022.Facebook

        Evergreen.V38.Questions.DevTo ->
            Evergreen.V43.Questions2022.DevTo

        Evergreen.V38.Questions.Meetups ->
            Evergreen.V43.Questions2022.Meetups

        Evergreen.V38.Questions.ElmWeekly ->
            Evergreen.V43.Questions2022.ElmWeekly

        Evergreen.V38.Questions.ElmNews ->
            Evergreen.V43.Questions2022.ElmNews

        Evergreen.V38.Questions.ElmCraft ->
            Evergreen.V43.Questions2022.ElmCraft


migrate_Questions2023_OtherLanguages : Evergreen.V38.Questions.OtherLanguages -> Evergreen.V43.Questions2022.OtherLanguages
migrate_Questions2023_OtherLanguages old =
    case old of
        Evergreen.V38.Questions.JavaScript ->
            Evergreen.V43.Questions2022.JavaScript

        Evergreen.V38.Questions.TypeScript ->
            Evergreen.V43.Questions2022.TypeScript

        Evergreen.V38.Questions.Go ->
            Evergreen.V43.Questions2022.Go

        Evergreen.V38.Questions.Haskell ->
            Evergreen.V43.Questions2022.Haskell

        Evergreen.V38.Questions.CSharp ->
            Evergreen.V43.Questions2022.CSharp

        Evergreen.V38.Questions.C ->
            Evergreen.V43.Questions2022.C

        Evergreen.V38.Questions.CPlusPlus ->
            Evergreen.V43.Questions2022.CPlusPlus

        Evergreen.V38.Questions.OCaml ->
            Evergreen.V43.Questions2022.OCaml

        Evergreen.V38.Questions.Python ->
            Evergreen.V43.Questions2022.Python

        Evergreen.V38.Questions.Swift ->
            Evergreen.V43.Questions2022.Swift

        Evergreen.V38.Questions.PHP ->
            Evergreen.V43.Questions2022.PHP

        Evergreen.V38.Questions.Java ->
            Evergreen.V43.Questions2022.Java

        Evergreen.V38.Questions.Ruby ->
            Evergreen.V43.Questions2022.Ruby

        Evergreen.V38.Questions.Elixir ->
            Evergreen.V43.Questions2022.Elixir

        Evergreen.V38.Questions.Clojure ->
            Evergreen.V43.Questions2022.Clojure

        Evergreen.V38.Questions.Rust ->
            Evergreen.V43.Questions2022.Rust

        Evergreen.V38.Questions.FSharp ->
            Evergreen.V43.Questions2022.FSharp


migrate_Questions2023_StylingTools : Evergreen.V38.Questions.StylingTools -> Evergreen.V43.Questions2022.StylingTools
migrate_Questions2023_StylingTools old =
    case old of
        Evergreen.V38.Questions.SassOrScss ->
            Evergreen.V43.Questions2022.SassOrScss

        Evergreen.V38.Questions.ElmCss ->
            Evergreen.V43.Questions2022.ElmCss

        Evergreen.V38.Questions.PlainCss ->
            Evergreen.V43.Questions2022.PlainCss

        Evergreen.V38.Questions.ElmUi ->
            Evergreen.V43.Questions2022.ElmUi

        Evergreen.V38.Questions.Tailwind ->
            Evergreen.V43.Questions2022.Tailwind

        Evergreen.V38.Questions.ElmTailwindModules ->
            Evergreen.V43.Questions2022.ElmTailwindModules

        Evergreen.V38.Questions.Bootstrap ->
            Evergreen.V43.Questions2022.Bootstrap


migrate_Questions2023_TestTools : Evergreen.V38.Questions.TestTools -> Evergreen.V43.Questions2022.TestTools
migrate_Questions2023_TestTools old =
    case old of
        Evergreen.V38.Questions.BrowserAcceptanceTests ->
            Evergreen.V43.Questions2022.BrowserAcceptanceTests

        Evergreen.V38.Questions.ElmBenchmark ->
            Evergreen.V43.Questions2022.ElmBenchmark

        Evergreen.V38.Questions.ElmTest ->
            Evergreen.V43.Questions2022.ElmTest

        Evergreen.V38.Questions.ElmProgramTest ->
            Evergreen.V43.Questions2022.ElmProgramTest

        Evergreen.V38.Questions.VisualRegressionTests ->
            Evergreen.V43.Questions2022.VisualRegressionTests


migrate_Questions2023_WhatLanguageDoYouUseForBackend : Evergreen.V38.Questions.WhatLanguageDoYouUseForBackend -> Evergreen.V43.Questions2022.WhatLanguageDoYouUseForBackend
migrate_Questions2023_WhatLanguageDoYouUseForBackend old =
    case old of
        Evergreen.V38.Questions.JavaScript_ ->
            Evergreen.V43.Questions2022.JavaScript_

        Evergreen.V38.Questions.TypeScript_ ->
            Evergreen.V43.Questions2022.TypeScript_

        Evergreen.V38.Questions.Go_ ->
            Evergreen.V43.Questions2022.Go_

        Evergreen.V38.Questions.Haskell_ ->
            Evergreen.V43.Questions2022.Haskell_

        Evergreen.V38.Questions.CSharp_ ->
            Evergreen.V43.Questions2022.CSharp_

        Evergreen.V38.Questions.OCaml_ ->
            Evergreen.V43.Questions2022.OCaml_

        Evergreen.V38.Questions.Python_ ->
            Evergreen.V43.Questions2022.Python_

        Evergreen.V38.Questions.PHP_ ->
            Evergreen.V43.Questions2022.PHP_

        Evergreen.V38.Questions.Java_ ->
            Evergreen.V43.Questions2022.Java_

        Evergreen.V38.Questions.Ruby_ ->
            Evergreen.V43.Questions2022.Ruby_

        Evergreen.V38.Questions.Elixir_ ->
            Evergreen.V43.Questions2022.Elixir_

        Evergreen.V38.Questions.Clojure_ ->
            Evergreen.V43.Questions2022.Clojure_

        Evergreen.V38.Questions.Rust_ ->
            Evergreen.V43.Questions2022.Rust_

        Evergreen.V38.Questions.FSharp_ ->
            Evergreen.V43.Questions2022.FSharp_

        Evergreen.V38.Questions.AlsoElm ->
            Evergreen.V43.Questions2022.AlsoElm

        Evergreen.V38.Questions.NotApplicable ->
            Evergreen.V43.Questions2022.NotApplicable


migrate_SendGrid_Error : Evergreen.V38.SendGrid.Error -> Evergreen.V43.SendGrid.Error
migrate_SendGrid_Error old =
    case old of
        Evergreen.V38.SendGrid.StatusCode400 p0 ->
            Evergreen.V43.SendGrid.StatusCode400 p0

        Evergreen.V38.SendGrid.StatusCode401 p0 ->
            Evergreen.V43.SendGrid.StatusCode401 p0

        Evergreen.V38.SendGrid.StatusCode403 p0 ->
            Evergreen.V43.SendGrid.StatusCode403 p0

        Evergreen.V38.SendGrid.StatusCode413 p0 ->
            Evergreen.V43.SendGrid.StatusCode413 p0

        Evergreen.V38.SendGrid.UnknownError p0 ->
            Evergreen.V43.SendGrid.UnknownError p0

        Evergreen.V38.SendGrid.NetworkError ->
            Evergreen.V43.SendGrid.NetworkError

        Evergreen.V38.SendGrid.Timeout ->
            Evergreen.V43.SendGrid.Timeout

        Evergreen.V38.SendGrid.BadUrl p0 ->
            Evergreen.V43.SendGrid.BadUrl p0


migrate_Ui_MultiChoiceWithOther : (a_old -> a_new) -> Evergreen.V38.Ui.MultiChoiceWithOther a_old -> Evergreen.V43.Ui.MultiChoiceWithOther a_new
migrate_Ui_MultiChoiceWithOther migrate_a old =
    { choices = old.choices |> migrate_AssocSet_Set migrate_a
    , otherChecked = old.otherChecked
    , otherText = old.otherText
    }


migrate_Ui_Size : Evergreen.V38.Ui.Size -> Evergreen.V43.Ui.Size
migrate_Ui_Size old =
    old


type alias Question a =
    { title : String
    , choices : Nonempty a
    , choiceToString : a -> String
    }


allDoYouUseElm : Nonempty DoYouUseElm
allDoYouUseElm =
    Nonempty
        YesAtWork
        [ YesInSideProjects
        , YesAsAStudent
        , IUsedToButIDontAnymore
        , NoButImCuriousAboutIt
        , NoAndIDontPlanTo
        ]


doYouUseElm : Question DoYouUseElm
doYouUseElm =
    { title = "Do you use Elm?"
    , choices = allDoYouUseElm
    , choiceToString =
        \a ->
            case a of
                YesAtWork ->
                    "Yes, at work"

                YesInSideProjects ->
                    "Yes, in side projects"

                YesAsAStudent ->
                    "Yes, as a student"

                IUsedToButIDontAnymore ->
                    "I used to, but I don't anymore"

                NoButImCuriousAboutIt ->
                    "No, but I'm curious about it"

                NoAndIDontPlanTo ->
                    "No, and I don't plan to"
    }


allAge : Nonempty Age
allAge =
    Nonempty Under10
        [ Age10To19
        , Age20To29
        , Age30To39
        , Age40To49
        , Age50To59
        , Over60
        , PreferNotToAnswer2
        ]


age : Question Age
age =
    { title = "How old are you?"
    , choices = allAge
    , choiceToString =
        \a ->
            case a of
                Under10 ->
                    "Younger than 10"

                Age10To19 ->
                    "Between 10 and 19"

                Age20To29 ->
                    "Between 20 and 29"

                Age30To39 ->
                    "Between 30 and 39"

                Age40To49 ->
                    "Between 40 and 49"

                Age50To59 ->
                    "Between 50 and 59"

                Over60 ->
                    "60 years or older"

                PreferNotToAnswer2 ->
                    "Prefer not to answer"
    }


allPleaseSelectYourGender : Nonempty PleaseSelectYourGender
allPleaseSelectYourGender =
    Nonempty Woman
        [ Man
        , TransWoman
        , TransMan
        , NonBinary
        , PreferNotToAnswer
        , OtherGender
        ]


pleaseSelectYourGender : Question PleaseSelectYourGender
pleaseSelectYourGender =
    { title = "Please select the gender you most closely identify with"
    , choices = allPleaseSelectYourGender
    , choiceToString =
        \a ->
            case a of
                Man ->
                    "Man"

                Woman ->
                    "Woman"

                TransMan ->
                    "Trans man"

                TransWoman ->
                    "Trans woman"

                NonBinary ->
                    "Non-binary"

                PreferNotToAnswer ->
                    "Prefer not to answer"

                OtherGender ->
                    "Other"
    }


allExperienceLevels : Nonempty ExperienceLevel
allExperienceLevels =
    Nonempty
        Beginner
        [ Intermediate
        , Professional
        , Expert
        ]


experienceLevel : Question ExperienceLevel
experienceLevel =
    { title = "What is your level of experience with functional programming?"
    , choices = allExperienceLevels
    , choiceToString =
        \a ->
            case a of
                Beginner ->
                    "I'm a beginner"

                Intermediate ->
                    "Intermediate"

                Professional ->
                    "I'm good enough to use it professionally"

                Expert ->
                    "I'm an expert and could probably give a talk on category theory"
    }


allOtherLanguages : Nonempty OtherLanguages
allOtherLanguages =
    Nonempty
        C
        [ CSharp
        , CPlusPlus
        , Clojure
        , Elixir
        , FSharp
        , Go
        , Haskell
        , Java
        , JavaScript
        , OCaml
        , PHP
        , Python
        , Ruby
        , Rust
        , Swift
        , TypeScript
        , NoOtherLanguage
        ]


otherLanguages : Question OtherLanguages
otherLanguages =
    { title = "What programming languages, other than Elm, are you most familiar with?"
    , choices = allOtherLanguages
    , choiceToString =
        \a ->
            case a of
                JavaScript ->
                    "JavaScript"

                TypeScript ->
                    "TypeScript"

                Go ->
                    "Go"

                Haskell ->
                    "Haskell"

                CSharp ->
                    "C#"

                C ->
                    "C"

                CPlusPlus ->
                    "C++"

                OCaml ->
                    "OCaml"

                Python ->
                    "Python"

                Swift ->
                    "Swift"

                PHP ->
                    "PHP"

                Java ->
                    "Java"

                Ruby ->
                    "Ruby"

                Elixir ->
                    "Elixir"

                Clojure ->
                    "Clojure"

                Rust ->
                    "Rust"

                FSharp ->
                    "F#"

                NoOtherLanguage ->
                    "None"
    }


allNewsAndDiscussions : Nonempty NewsAndDiscussions
allNewsAndDiscussions =
    Nonempty
        BlogPosts
        [ ElmDiscourse
        , ElmRadio
        , ElmSlack
        , ElmSubreddit
        , ElmWeekly
        , Meetups
        , Twitter
        , DevTo
        , ElmNews
        , ElmCraft
        , IncrementalElm
        , NoNewsOrDiscussions
        ]


newsAndDiscussions : Question NewsAndDiscussions
newsAndDiscussions =
    { title = "Where do you go for Elm news and discussion?"
    , choices = allNewsAndDiscussions
    , choiceToString =
        \a ->
            case a of
                ElmDiscourse ->
                    "Elm Discourse"

                ElmSlack ->
                    "Elm Slack"

                ElmSubreddit ->
                    "Elm Subreddit"

                Twitter ->
                    "Twitter discussions"

                ElmRadio ->
                    "Elm Radio"

                BlogPosts ->
                    "Blog posts"

                DevTo ->
                    "dev.to"

                Meetups ->
                    "Meetups"

                ElmWeekly ->
                    "Elm Weekly newsletter"

                ElmNews ->
                    "elm-news.com"

                ElmCraft ->
                    "elmcraft.org"

                IncrementalElm ->
                    "Incremental Elm"

                NoNewsOrDiscussions ->
                    "None"
    }


allElmResources : Nonempty ElmResources
allElmResources =
    Nonempty
        BeginningElmBook
        [ BuildingWebAppsWithElm
        , DailyDrip
        , EggheadCourses
        , ElmForBeginners
        , ElmInActionBook
        , ElmOnline
        , ElmSlack_
        , ElmTown
        , FrontendMasters
        , GuideElmLang
        , ProgrammingElmBook
        , StackOverflow
        , TheJsonSurvivalKit
        , WeeklyBeginnersElmSubreddit
        , NoElmResources
        ]


elmResources : Question ElmResources
elmResources =
    { title = "What resources did you use to learn Elm?"
    , choices = allElmResources
    , choiceToString =
        \a ->
            case a of
                DailyDrip ->
                    "Daily Drip"

                ElmInActionBook ->
                    "Elm in Action (book)"

                WeeklyBeginnersElmSubreddit ->
                    "Weekly beginners threads on the Elm Subreddit"

                BeginningElmBook ->
                    "Beginning Elm (book)"

                StackOverflow ->
                    "StackOverflow"

                BuildingWebAppsWithElm ->
                    "Building Web Apps with Elm (Pragmatic Studio course)"

                TheJsonSurvivalKit ->
                    "The JSON Survival Kit (book)"

                EggheadCourses ->
                    "Egghead courses"

                ProgrammingElmBook ->
                    "Programming Elm (book)"

                GuideElmLang ->
                    "guide.elm-lang.org"

                ElmForBeginners ->
                    "Elm for Beginners (KnowThen course)"

                ElmSlack_ ->
                    "Elm Slack"

                FrontendMasters ->
                    "Frontend Masters"

                ElmOnline ->
                    "Elm Online"

                NoElmResources ->
                    "None"

                ElmTown ->
                    "Elm Town"
    }


initialInterestTitle : String
initialInterestTitle =
    "What initially attracted you to Elm, or motivated you to try it?"


countryChoiceToString : { a | name : String, flag : String } -> String
countryChoiceToString { name, flag } =
    (case name of
        "United Kingdom of Great Britain and Northern Ireland" ->
            "United Kingdom"

        "United States of America" ->
            "United States"

        "Russian Federation" ->
            "Russia"

        "Bosnia and Herzegovina" ->
            "Bosnia"

        "Iran (Islamic Republic of)" ->
            "Iran"

        "Venezuela (Bolivarian Republic of)" ->
            "Venezuela"

        "Trinidad and Tobago" ->
            "Trinidad"

        "Viet Nam" ->
            "Vietnam"

        "Taiwan, Province of China" ->
            "Taiwan"

        "South Georgia and the South Sandwich Islands" ->
            "South Georgia"

        "Saint Helena, Ascension and Tristan da Cunha" ->
            "Saint Helena"

        "Korea (Democratic People's Republic of)" ->
            "North Korea"

        "Korea, Republic of" ->
            "South Korea"

        _ ->
            name
    )
        ++ " "
        ++ flag


countryLivingIn : Question Country
countryLivingIn =
    { title = "Which country do you live in?"
    , choices =
        List.Nonempty.fromList Countries.all
            |> Maybe.withDefault (Nonempty { name = "", code = "", flag = "" } [])
            |> List.Nonempty.cons { name = "Kosovo", code = "XK", flag = "üáΩüá∞" }
            |> List.Nonempty.sortBy countryChoiceToString
    , choiceToString = countryChoiceToString
    }


allApplicationDomains : Nonempty ApplicationDomains
allApplicationDomains =
    Nonempty
        ArtAndCulture
        [ Communication
        , DataVisualization
        , ECommerce
        , Education
        , Engineering
        , EnvironmentOrClimate
        , Finance
        , Gaming
        , Health
        , Legal
        , Music
        , Productivity
        , SocialMedia
        , Sports
        , Transportation
        , NoApplicationDomains
        ]


applicationDomains : Question ApplicationDomains
applicationDomains =
    { title = "In which application domains have you used Elm?"
    , choices = allApplicationDomains
    , choiceToString =
        \a ->
            case a of
                Education ->
                    "Education"

                Gaming ->
                    "Gaming"

                ECommerce ->
                    "E-commerce"

                Music ->
                    "Music"

                Finance ->
                    "Finance"

                Health ->
                    "Health"

                Productivity ->
                    "Productivity"

                Communication ->
                    "Communication"

                DataVisualization ->
                    "Data visualization"

                Transportation ->
                    "Transportation"

                SocialMedia ->
                    "Social media"

                Engineering ->
                    "Engineering"

                Sports ->
                    "Sports"

                ArtAndCulture ->
                    "Art and culture"

                Legal ->
                    "Legal"

                EnvironmentOrClimate ->
                    "Environment and climate"

                NoApplicationDomains ->
                    "None"
    }


allDoYouUseElmAtWork : Nonempty DoYouUseElmAtWork
allDoYouUseElmAtWork =
    Nonempty NotInterestedInElmAtWork
        [ WouldLikeToUseElmAtWork
        , HaveTriedElmInAWorkProject
        , IUseElmAtWork
        , NotEmployed
        ]


doYouUseElmAtWork : Question DoYouUseElmAtWork
doYouUseElmAtWork =
    { title = "Do you use Elm at work?"
    , choices = allDoYouUseElmAtWork
    , choiceToString =
        \a ->
            case a of
                NotInterestedInElmAtWork ->
                    "No, and I'm not interested"

                WouldLikeToUseElmAtWork ->
                    "No, but I am interested"

                HaveTriedElmInAWorkProject ->
                    "I have tried Elm at work"

                IUseElmAtWork ->
                    "I use Elm at work"

                NotEmployed ->
                    "Not employed"
    }


whatPreventsYouFromUsingElmAtWorkTitle : String
whatPreventsYouFromUsingElmAtWorkTitle =
    "What prevents you from using Elm at work?"


howDidItGoUsingElmAtWorkTitle : String
howDidItGoUsingElmAtWorkTitle =
    "How did it go using Elm at work?"


howIsItGoingUsingElmAtWorkTitle : String
howIsItGoingUsingElmAtWorkTitle =
    "How is it going using Elm at work?"


allHowLargeIsTheCompany : Nonempty HowLargeIsTheCompany
allHowLargeIsTheCompany =
    Nonempty Size1To10Employees
        [ Size11To50Employees
        , Size50To100Employees
        , Size100OrMore
        ]


howLargeIsTheCompany : Question HowLargeIsTheCompany
howLargeIsTheCompany =
    { title = "How large is the company you work at?"
    , choices = allHowLargeIsTheCompany
    , choiceToString =
        \a ->
            case a of
                Size1To10Employees ->
                    "1 to 10 employees"

                Size11To50Employees ->
                    "11 to 50 employees"

                Size50To100Employees ->
                    "50 to 100 employees"

                Size100OrMore ->
                    "100+ employees"
    }


allBackendLanguages : Nonempty WhatLanguageDoYouUseForBackend
allBackendLanguages =
    Nonempty
        C_
        [ Clojure_
        , CPlusPlus_
        , CSharp_
        , Elixir_
        , AlsoElm
        , FSharp_
        , Go_
        , Haskell_
        , Java_
        , JavaScript_
        , Kotlin_
        , OCaml_
        , PHP_
        , Python_
        , Ruby_
        , Rust_
        , TypeScript_
        , NotApplicable
        ]


whatLanguageDoYouUseForBackend : Question WhatLanguageDoYouUseForBackend
whatLanguageDoYouUseForBackend =
    { title = "What languages does your company use on the backend?"
    , choices = allBackendLanguages
    , choiceToString =
        \a ->
            case a of
                JavaScript_ ->
                    "JavaScript"

                TypeScript_ ->
                    "TypeScript"

                Go_ ->
                    "Go"

                Haskell_ ->
                    "Haskell"

                CSharp_ ->
                    "C#"

                OCaml_ ->
                    "OCaml"

                Python_ ->
                    "Python"

                PHP_ ->
                    "PHP"

                Java_ ->
                    "Java"

                Ruby_ ->
                    "Ruby"

                Elixir_ ->
                    "Elixir"

                Clojure_ ->
                    "Clojure"

                Rust_ ->
                    "Rust"

                FSharp_ ->
                    "F#"

                AlsoElm ->
                    "Elm"

                NotApplicable ->
                    "Not applicable"

                C_ ->
                    "C"

                CPlusPlus_ ->
                    "C++"

                Kotlin_ ->
                    "Kotlin"
    }


allHowLong : Nonempty HowLong
allHowLong =
    Nonempty
        Under3Months
        [ Between3MonthsAndAYear
        , OneYear
        , TwoYears
        , ThreeYears
        , FourYears
        , FiveYears
        , SixYears
        , SevenYears
        , EightYears
        , NineYears
        , TenYears
        ]


howLong : Question HowLong
howLong =
    { title = "How long have you been using Elm?"
    , choices = allHowLong
    , choiceToString =
        \a ->
            case a of
                Under3Months ->
                    "Under three months"

                Between3MonthsAndAYear ->
                    "Between three months and a year"

                OneYear ->
                    "1 year"

                TwoYears ->
                    "2 years"

                ThreeYears ->
                    "3 years"

                FourYears ->
                    "4 years"

                FiveYears ->
                    "5 years"

                SixYears ->
                    "6 years"

                SevenYears ->
                    "7 years"

                EightYears ->
                    "8 years"

                NineYears ->
                    "9 years"

                TenYears ->
                    "10 years"
    }


allElmVersions : Nonempty ElmVersion
allElmVersions =
    Nonempty Version0_19 [ Version0_18, Version0_17, Version0_16 ]


elmVersion : Question ElmVersion
elmVersion =
    { title = "What versions of Elm are you using?"
    , choices = allElmVersions
    , choiceToString =
        \a ->
            case a of
                Version0_19 ->
                    "0.19"

                Version0_18 ->
                    "0.18"

                Version0_17 ->
                    "0.17"

                Version0_16 ->
                    "0.16"
    }


allDoYouUseElmFormat : Nonempty DoYouUseElmFormat
allDoYouUseElmFormat =
    Nonempty PreferElmFormat
        [ TriedButDontUseElmFormat
        , HeardButDontUseElmFormat
        , HaveNotHeardOfElmFormat
        ]


doYouUseElmFormat : Question DoYouUseElmFormat
doYouUseElmFormat =
    { title = "Do you format your code with elm-format?"
    , choices = allDoYouUseElmFormat
    , choiceToString =
        \a ->
            case a of
                PreferElmFormat ->
                    "I prefer to use elm-format"

                TriedButDontUseElmFormat ->
                    "I have tried elm-format, but prefer to not use it"

                HeardButDontUseElmFormat ->
                    "I have heard of elm-format, but have not used it"

                HaveNotHeardOfElmFormat ->
                    "I have not previously heard of elm-format"
    }


allStylingTools : Nonempty StylingTools
allStylingTools =
    Nonempty Bootstrap
        [ SassOrScss
        , Tailwind
        , ElmCss
        , ElmTailwindModules
        , ElmUi
        , PlainCss
        , NoStylingTools
        ]


stylingTools : Question StylingTools
stylingTools =
    { title = "What tools or libraries do you use to style your Elm applications?"
    , choices = allStylingTools
    , choiceToString =
        \a ->
            case a of
                SassOrScss ->
                    "SASS/SCSS"

                ElmCss ->
                    "elm-css"

                PlainCss ->
                    "plain CSS"

                ElmUi ->
                    "elm-ui"

                Tailwind ->
                    "Tailwind"

                Bootstrap ->
                    "Bootstrap"

                ElmTailwindModules ->
                    "elm-tailwind-modules"

                NoStylingTools ->
                    "None"
    }


allBuildTools : Nonempty BuildTools
allBuildTools =
    Nonempty Brunch
        [ CreateElmApp
        , ElmLand_
        , ElmLive
        , ElmMakeStandalone
        , ElmPages_
        , ElmReactor
        , ElmWatch
        , EsBuild
        , Gulp
        , Lamdera__
        , Make
        , Parcel
        , ShellScripts
        , Vite
        , Webpack
        , NoBuildTools
        ]


buildTools : Question BuildTools
buildTools =
    { title = "What tools do you use to build your Elm applications?"
    , choices = allBuildTools
    , choiceToString =
        \a ->
            case a of
                ShellScripts ->
                    "Shell scripts"

                ElmLive ->
                    "elm-live"

                CreateElmApp ->
                    "create-elm-app"

                Webpack ->
                    "Webpack"

                Brunch ->
                    "Brunch"

                ElmMakeStandalone ->
                    "elm-make standalone"

                Gulp ->
                    "Gulp"

                Make ->
                    "Make"

                ElmReactor ->
                    "elm-reactor"

                Parcel ->
                    "Parcel"

                Vite ->
                    "Vite"

                NoBuildTools ->
                    "None"

                ElmWatch ->
                    "elm-watch"

                ElmPages_ ->
                    "elm-pages"

                Lamdera__ ->
                    "Lamdera"

                ElmLand_ ->
                    "elm-land"

                EsBuild ->
                    "esbuild"
    }


allFrameworks : Nonempty Frameworks
allFrameworks =
    Nonempty Lamdera_ [ ElmPages, ElmPlayground, ElmSpa, ElmLand, NoFramework ]


frameworks : Question Frameworks
frameworks =
    { title = "What frameworks do you use?"
    , choices = allFrameworks
    , choiceToString =
        \a ->
            case a of
                Lamdera_ ->
                    "Lamdera"

                ElmSpa ->
                    "elm-spa"

                ElmPages ->
                    "elm-pages"

                ElmPlayground ->
                    "elm-playground"

                NoFramework ->
                    "None"

                ElmLand ->
                    "elm-land"
    }


allEditors : Nonempty Editors
allEditors =
    Nonempty Atom
        [ Emacs
        , Intellij
        , SublimeText
        , VSCode
        , Vim
        , NoEditor
        ]


editors : Question Editors
editors =
    { title = "What editor(s) do you use to write your Elm applications?"
    , choices = allEditors
    , choiceToString =
        \a ->
            case a of
                SublimeText ->
                    "Sublime Text"

                Vim ->
                    "Vim"

                Atom ->
                    "Atom"

                Emacs ->
                    "Emacs"

                VSCode ->
                    "VSCode"

                Intellij ->
                    "Intellij"

                NoEditor ->
                    "None"
    }


allDoYouUseElmReview : Nonempty DoYouUseElmReview
allDoYouUseElmReview =
    Nonempty NeverHeardOfElmReview
        [ HeardOfItButNeverTriedElmReview
        , IveTriedElmReview
        , IUseElmReviewRegularly
        ]


doYouUseElmReview : Question DoYouUseElmReview
doYouUseElmReview =
    { title = "Do you use elm-review?"
    , choices = allDoYouUseElmReview
    , choiceToString =
        \a ->
            case a of
                NeverHeardOfElmReview ->
                    "I've never heard of it"

                HeardOfItButNeverTriedElmReview ->
                    "I've heard of it but never tried it"

                IveTriedElmReview ->
                    "I use elm-review infrequently"

                IUseElmReviewRegularly ->
                    "I use elm-review regularly"
    }


allTestTools : Nonempty TestTools
allTestTools =
    Nonempty BrowserAcceptanceTests
        [ ElmBenchmark
        , ElmTest
        , ElmProgramTest
        , VisualRegressionTests
        , NoTestTools
        ]


testTools : Question TestTools
testTools =
    { title = "What tools do you use to test your Elm projects?"
    , choices = allTestTools
    , choiceToString =
        \a ->
            case a of
                BrowserAcceptanceTests ->
                    "Browser acceptance testing (e.g. Capybara)"

                ElmBenchmark ->
                    "elm-benchmark"

                ElmTest ->
                    "elm-test"

                ElmProgramTest ->
                    "elm-program-test"

                VisualRegressionTests ->
                    "Visual regression testing (e.g. Percy.io)"

                NoTestTools ->
                    "None"
    }


biggestPainPointTitle : String
biggestPainPointTitle =
    "What has been your biggest pain point in your use of Elm?"


whatDoYouLikeMostTitle : String
whatDoYouLikeMostTitle =
    "What do you like the most about your use of Elm?"


surveyImprovementsTitle : String
surveyImprovementsTitle =
    "Do you have any comments or suggestions?"


whatPackagesDoYouUseTitle : String
whatPackagesDoYouUseTitle =
    "What packages do you use in your Elm apps?"
